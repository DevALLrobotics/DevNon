# backend/main.py
from fastapi import FastAPI, Form, Request
from fastapi.responses import FileResponse , RedirectResponse, HTMLResponse
from fastapi.staticfiles import StaticFiles

app = FastAPI()
# Path ‡∏Ç‡∏≠‡∏á‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• SQLite
DB_PATH = "../database/database.db"

# ‡πÄ‡∏™‡∏¥‡∏£‡πå‡∏ü‡πÑ‡∏ü‡∏•‡πå static (‡πÄ‡∏ä‡πà‡∏ô CSS, JS)
app.mount("/static", StaticFiles(directory="frontend"), name="static")

# ‡∏´‡∏ô‡πâ‡∏≤ index
@app.get("/")
def index():
    return FileResponse("frontend/html/index.html")

# ‡∏´‡∏ô‡πâ‡∏≤ login
@app.get("/login")
def login():
    return FileResponse("frontend/html/login.html")

# ‡∏´‡∏ô‡πâ‡∏≤ booking
@app.get("/booking")
def booking():
    return FileResponse("frontend/html/booking.html")

@app.get("/register")
def show_register():
    return FileResponse("frontend/html/register.html")

# ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏°
@app.post("/register")
async def register_user(
    username: str = Form(...),
    password: str = Form(...),
    first_name: str = Form(...),
    last_name: str = Form(...),
    birth_day: str = Form(...),
    phone_num: str = Form(...),
    email: str = Form(...),
    nickname: str = Form(...)
):
    try:
        # ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        conn = sqlite3.connect(DB_PATH)
        cursor = conn.cursor()

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ã‡πâ‡∏≥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        cursor.execute(
            "SELECT * FROM users WHERE username = ? OR email = ?", (username, email)
        )
        existing_user = cursor.fetchone()

        if existing_user:
            print("‚ùå ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ã‡πâ‡∏≥")
            return RedirectResponse("/register", status_code=303)

        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        cursor.execute(
            """
            INSERT INTO users (username, password, first_name, last_name, birth_day, phone_num, email, nickname)
            VALUES (?, ?, ?, ?, ?, ?, ?, ?)
            """,
            (username, password, first_name, last_name, birth_day, phone_num, email, nickname)
        )
        conn.commit()
        print(f"‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {username}")

    except Exception as e:
        print(f"‚ùå Error: {e}")
    finally:
        conn.close()

    return RedirectResponse("/", status_code=303)

# ‡πÅ‡∏™‡∏î‡∏á‡∏´‡∏ô‡πâ‡∏≤ login
@app.get("/login")
def show_login():
    return FileResponse("frontend/html/login.html")

# ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ü‡∏≠‡∏£‡πå‡∏° login
@app.post("/login")
async def login_user(
    email: str = Form(...),
    password: str = Form(...)
):
    # üß™ (‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•)
    # ‡∏à‡∏≥‡∏•‡∏≠‡∏á: ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏Ñ‡∏∑‡∏≠ "test@example.com" ‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô "1234"
    if email == "test@example.com" and password == "1234":
        print("‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", email)
        return RedirectResponse("/", status_code=303)
    else:
        print("‚ùå ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:", email)
        return RedirectResponse("/login", status_code=303)